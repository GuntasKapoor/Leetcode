/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValidSequenceHelper(TreeNode* root, vector<int>& arr,int i){
        if(!root || i == arr.size() || arr[i] != root->val){
            return false;
        }
        
        if(!root->left && !root->right && i == arr.size() - 1 && arr[i] == root->val){
            return true;
        }
        
        return isValidSequenceHelper(root->left, arr, i + 1) || isValidSequenceHelper(root->right, arr, i + 1);
    }
    
    bool isValidSequence(TreeNode* root, vector<int>& arr) {
        return isValidSequenceHelper(root, arr, 0);
    }
};
