class FirstUnique {
public:
    unordered_map<int, int> mp;
    queue<int> q;
    FirstUnique(vector<int>& nums) {
        for(int i = 0; i < nums.size(); i++){
            if(mp.count(nums[i]) == 0){
                q.push(nums[i]);
                mp[nums[i]] = 1;
            }
            else if(mp.count(nums[i])){
                mp[nums[i]]++;
            }
        }
    }
    
    int showFirstUnique() {
        while(!q.empty() && mp.count(q.front()) && mp[q.front()] > 1){
            q.pop();
        }
        if(q.empty()){
            return -1;
        }
        return q.front();
    }
    
    void add(int value) {
        if(mp.count(value) == 0){
            mp[value] = 1;
            q.push(value);
        }
        else if(mp.count(value)){
            mp[value]++;
        }
    }
};

/**
 * Your FirstUnique object will be instantiated and called as such:
 * FirstUnique* obj = new FirstUnique(nums);
 * int param_1 = obj->showFirstUnique();
 * obj->add(value);
 */
