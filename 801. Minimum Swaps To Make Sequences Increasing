class Solution {
public:
    int minSwap(vector<int>& A, vector<int>& B) {
        int a = 0;
        int b = 1;
        int c, d;
// There could be two cases here -> 
// 1. The current index elements are greater than the previous ones in the same arrays.
// 2. The current index elements are greater than the previous ones of the different arrays too. 
// Note that both these cases could be there simultaneously too...its your choice to handle them all in 2 ifs or if, if else(3 cases). I have done both.
        
        for(int i = 1; i < A.size(); i++){
            c = INT_MAX, d = INT_MAX;
            if((A[i] > A[i - 1] && B[i] > B[i - 1])){
                c = min(c, a);
                d = min(d, b + 1);
            }
            if(A[i] > B[i - 1] && B[i] > A[i - 1]){
                c = min(c, b);
                d = min(d, a + 1);
            }
            a = c;
            b = d;
        }
     return min(a, b);    
    }
};


//solution 2
class Solution {
public:
    int minSwap(vector<int>& A, vector<int>& B) {
    for(int i = 1; i < A.size(); i++){
        if((A[i] > A[i - 1] && B[i] > B[i - 1]) && (A[i] > B[i - 1] && B[i] > A[i - 1])){
            c = min(a, b);
            d = min(a , b) + 1;    
        }
        else if(A[i] > A[i - 1] & B[i] > B[i - 1]){
            c = a;
            d = b + 1;
        }
        else if(A[i] > B[i - 1] && B[i] > A[i - 1]){
            c = b;
            d = a + 1;
        }
        a = c;
        b = d;
    }    
    return min(a,b);    
    }
};
